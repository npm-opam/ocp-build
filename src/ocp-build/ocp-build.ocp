(**************************************************************************)
(*                                                                        *)
(*                        TypeRex OCaml Tools                             *)
(*                                                                        *)
(*                             OCamlPro                                   *)
(*                                                                        *)
(*  Copyright 2011-2012 OCamlPro                                          *)
(*  All rights reserved.  See accompanying files for the terms under      *)
(*  which this file is distributed. In doubt, contact us at               *)
(*  contact@ocamlpro.com (http://www.ocamlpro.com/)                       *)
(**************************************************************************)

copyright = [ "OCamlPro/INRIA 2011-2013" ]
authors = [ "Fabrice LE FESSANT <fabrice.le_fessant@ocamlpro.com>" ]
license = [ "GPLv3" ]

(* Only install the ocp-build, so set install=true in it *)
install = false

begin library "ocp-build-misc"
  install = true
  files = [
    "logger.ml"
    "buildMisc.ml";
    "buildScanner.ml"; (* Scan directories looking for files with particular properties *)
    "buildSubst.ml"
      "buildFind.ml"
    "buildTerm.ml"
  ]

   requires =  [
    "ocplib-lang"; "unix" "ocp-build-win32"; "ocplib-system" ]

end

begin library "ocplib-project"
  install = true

  files = [

    "buildOCPTree.ml"
    "buildOCPParser.mly";
    "buildOCPParse.ml";

    "buildOCPVariable.ml"
    "buildOCPTypes.ml";
    "buildOCPInterp.ml"
    "buildOCP.ml"
 ]

  requires = [ "unix"; "ocp-build-misc" ]
end

begin library "ocp-build-engine"
  files = [

  "buildEngineMtime.ml";      (* How modification times are computed *)
  "buildEngineTypes.ml";      (* All interesting types for the build engine *)
  "buildEngineGlobals.ml";    (* Global tables and misc functions *)
  "buildEngineRules.ml"             (* Functions to create compilation rules *)
  "buildEngineContext.ml";    (* Initialisation of the build Engine *)
  "buildEngineDisplay.ml";
  "buildEngine.ml";           (* The generic parallel build engine *)
  ]

   requires =  [
     "ocp-build-misc"
    "unix" ]

end

begin library "ocp-build-ocaml"

  files = [
   "buildObjectInspector.ml";    (* Functions to explore object files *)
 ]

(*  requires = [ "ocaml-stdlib" ] *)

end

begin library "ocp-build-lib"

  files = [
    "buildVersion.ml" (ocp2ml = true env_strings = [ "datadir" ])
    "buildTypes.ml";            (* All interesting types *)
    "buildOptions.ml"
    "buildGlobals.ml";          (* All global variables and tables *)
    "buildConfig.ml";           (* Values stored in the configuration file. *)
(*    "buildOCFGen.ml"; *)
    "buildAutogen.ml";          (* Generate .ocp from directory content *)
  ]

  requires = [ "unix"; "ocp-build-engine"; "ocplib-project";
    "ocp-build-ocaml"; "ocp-build-misc" ]

end


begin library "ocplib-ocamlfind"
  files = [ "metaTypes.ml" "metaLexer.mll"  "metaFile.ml" "metaParser.ml"
              "metaConfig.ml"
          ]
  requires = [ "ocp-build-lib" ]
end

    begin program "test-meta"
        files = [ "metaMain.ml" ]
requires = [ "ocplib-ocamlfind"]
end


(*
This plugin defines the rules to build OCaml packages.
BuildOCamlRules.create is directly called from BuildMain, so it
is not yet an optional plugin, but it should at some point (TODO).
*)
begin library "ocp-build-ocaml-plugin"
  files = [
    "buildOCamlConfig.ml";
    "buildOCamlTypes.ml";
    "buildOCamlMisc.ml";
    "buildOCamlVariables.ml";
    "buildOCamldep.ml";         (* Load dependencies from a file generated
                                     by ocamldep *)
    "buildOCamlSyntaxes.ml";    (* For preprocessing of OCaml files *)
    "buildOCamlRules.ml";       (* Initialisation of the build Engine *)
    "buildOCamlInstall.ml"
    "buildOCamlMeta.ml";
        "buildOCamlTest.ml";
  ]
  requires = [ "ocp-build-lib" "ocplib-ocamlfind" ]
end

begin program "ocp-build-infer-env"

  files = [ "buildOCamlEnv.ml" ]
  requires = [ "ocp-build-ocaml" "ocp-build-misc" ]


end

begin library "ocp-build-oasis"
  files = [
    "buildOasis.ml"
  ]
  requires = [ "ocp-build-ocaml" "ocplib-project" ]
end

begin program "ocp-build"
  lib_files = [
    "../../boot/ocaml.ocp"
    "../../boot/camlp4.ocp"
  ]
  install = true
  files = [
    "buildArgs.ml"
    "buildActions.ml";          (* Main possible actions *)
    "buildActionRoot.ml"
    "buildActionPrefs.ml"
    "buildActionConfigure.ml"
    "buildActionBuild.ml"
    "buildActionInstall.ml"
    "buildActionClean.ml"
    "buildActionTests.ml"
    "buildActionUninstall.ml"
    "buildActionQuery.ml"
    "buildMain.ml" (* Driver of program *)
  ]
  requires = [ "ocp-build-lib" "ocp-build-ocaml-plugin"  "ocplib-ocamlfind"
                 "ocp-build-oasis"
             ]

end


begin program "ocp-project"
  files = [
    "projectMain.ml"
  ]
  requires = [ "ocplib-project" ]
end

begin test "ocp-build.test"
  files = []
  requires = [ "ocp-build" ]

  test_dir = [ "%{tests}%/%{test}%" ]
  test_args = [ "-init" "-scan" ]
  test_benchmark = true
  tests = [
        "cycle"   (test_exit = 2) (* should raise error 2 *)
      ]
end
